{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/edoardo/Scrivania/REACT JS/Data Loader - Use Effect/src/componente/Risorse.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst Risorse = () => {\n  _s();\n\n  const [tipoRisorsa, setTipoRisorsa] = useState('posts');\n  console.log('renderato');\n  useEffect(() => {\n    // Tutto quello che c'è dentro a useEffect viene eseguito ogni volta che c'è un renderer\n    console.log('Risorsa cambiata');\n  }, [tipoRisorsa]);\n  /* Tuttavia se vogliamo effettuare questi changes soltanto in determinati momenti (cambio dati, component mounts...)\n     c'è un secondo parametro come array da passare ad useEffetcs.\n     In questo caso se tipoRisorsa cambia, allora si esegue useEffects. * */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTipoRisorsa('posts'),\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTipoRisorsa('users'),\n      children: \"Utenti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTipoRisorsa('comments'),\n      children: \"Commenti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: tipoRisorsa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Risorse, \"XzA7LSvcbNtaVdW8H/iCnhLyV1Y=\");\n\n_c = Risorse;\nexport default Risorse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Risorse\");","map":{"version":3,"sources":["/home/edoardo/Scrivania/REACT JS/Data Loader - Use Effect/src/componente/Risorse.tsx"],"names":["React","useState","useEffect","Risorse","tipoRisorsa","setTipoRisorsa","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,OAAD,CAA7C;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AAAG;AACfI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAFQ,EAEN,CAACH,WAAD,CAFM,CAAT;AAIA;AACJ;AACA;;AAGI,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,OAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,OAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,UAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtBD;;GAAMD,O;;KAAAA,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport {useState, useEffect} from \"react\";\n\nconst Risorse = () => {\n    const[tipoRisorsa, setTipoRisorsa] = useState('posts');\n\n    console.log('renderato')\n\n    useEffect(() => {  // Tutto quello che c'è dentro a useEffect viene eseguito ogni volta che c'è un renderer\n        console.log('Risorsa cambiata');\n    }, [tipoRisorsa])\n\n    /* Tuttavia se vogliamo effettuare questi changes soltanto in determinati momenti (cambio dati, component mounts...)\n       c'è un secondo parametro come array da passare ad useEffetcs.\n       In questo caso se tipoRisorsa cambia, allora si esegue useEffects. * */\n\n\n    return (\n        <div>\n            <button onClick={() => setTipoRisorsa('posts')}>Posts</button>\n            <button onClick={() => setTipoRisorsa('users')}>Utenti</button>\n            <button onClick={() => setTipoRisorsa('comments')}>Commenti</button>\n            <h1>{tipoRisorsa}</h1>\n        </div>\n    )\n}\n\nexport default Risorse;"]},"metadata":{},"sourceType":"module"}